# yaml-language-server: $schema=https://raw.githubusercontent.com/pulumi/pulumi/master/pkg/codegen/schema/pulumi.json
---
name: aws-vpc
types:
    aws-vpc:index:NatGatewayConfiguration:
        description: "Configuration for NAT Gateways."
        properties:
            elasticIpAllocationIds:
                type: array
                items:
                    type: string
                plain: true
                description: "A list of EIP allocation IDs to assign to the NAT Gateways. Optional. If specified, the number of supplied values must match the chosen strategy (either one, or the number of availability zones)."
            strategy:
                $ref: "#/types/aws-vpc:index:NatGatewayStrategy"
                plain: true
                description: "The strategy for deploying NAT Gateways."

        type: object
        required:
            - strategy

    aws-vpc:index:NatGatewayStrategy:
        description: "A strategy for creating NAT Gateways for private subnets within a VPC."
        type: string
        enum:
            - description: "Do not create any NAT Gateways. Resources in private subnets will not be able to access the internet."
              value: "None"

            - description: "Create a single NAT Gateway for the entire VPC. This configuration is not recommended for production infrastructure as it creates a single point of failure."
              value: "Single"

            - description: "Create a NAT Gateway in each availability zone. This is the recommended configuration for production infrastructure."
              value: "OnePerAz"

    aws-vpc:index:SubnetType:
        description: "A type of subnet within a VPC."
        type: string
        enum:
            - description: "A subnet whose hosts can directly communicate with the internet."
              value: "Public"

            - description: "A subnet whose hosts can not directly communicate with the internet, but can initiate outbound network traffic via a NAT Gateway."
              value: "Private"

            - description: "A subnet whose hosts have no connectivity with the internet."
              value: "Isolated"

    aws-vpc:index:SubnetSpec:
        description: "Configuration for a VPC subnet."
        properties:
            cidrMask:
                type: integer
                plain: true
                description: "The bitmask for the subnet's CIDR block."

            name:
                type: string
                plain: true
                description: "The subnet's name. Will be templated upon creation."

            type:
                $ref: "#/types/aws-vpc:index:SubnetType"
                plain: true
                description: "The type of subnet."

        type: object
        required:
            - type
            - cidrMask

    aws-vpc:index:VpcEndpointSpec:
        properties:
            autoAccept:
                type: boolean
                plain: true
                description: "Accept the VPC endpoint (the VPC endpoint and service need to be in the same AWS account)."

            policy:
                type: string
                description: "A policy to attach to the endpoint that controls access to the service. This is a JSON formatted string. Defaults to full access. All `Gateway` and some `Interface` endpoints support policies - see the [relevant AWS documentation](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-endpoints-access.html) for more details.\n"

            privateDnsEnabled:
                type: boolean
                plain: true
                description: "Whether or not to associate a private hosted zone with the specified VPC. Applicable for endpoints of type Interface. Defaults to `false`."

            routeTableIds:
                type: array
                items:
                    type: string

                description: "One or more route table IDs. Applicable for endpoints of type `Gateway`.\n"

            securityGroupIds:
                type: array
                items:
                    type: string

                description: "The ID of one or more security groups to associate with the network interface. Applicable for endpoints of type `Interface`.\nIf no security groups are specified, the VPC's [default security group](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#DefaultSecurityGroup) is associated with the endpoint.\n"

            serviceName:
                type: string
                plain: true
                description: "The service name. For AWS services the service name is usually in the form `com.amazonaws.\u003cregion\u003e.\u003cservice\u003e` (the SageMaker Notebook service is an exception to this rule, the service name is in the form `aws.sagemaker.\u003cregion\u003e.notebook`)."

            subnetIds:
                type: array
                items:
                    type: string

                description: "The ID of one or more subnets in which to create a network interface for the endpoint. Applicable for endpoints of type `GatewayLoadBalancer` and `Interface`.\n"

            tags:
                type: object
                additionalProperties:
                    type: string

                description: "A map of tags to assign to the resource. If configured with a provider `default_tags` configuration block present, tags with matching keys will overwrite those defined at the provider-level.\n"

            vpcEndpointType:
                type: string
                description: "The VPC endpoint type, `Gateway`, `GatewayLoadBalancer`, or `Interface`. Defaults to `Gateway`.\n"

        type: object
        required:
            - serviceName

resources:
    aws-vpc:index:Vpc:
        isComponent: true
        properties:
            eips:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2feip:Eip"
                description: The EIPs for any NAT Gateways for the VPC. If no NAT Gateways are specified, this will be an empty list.
            internetGateway:
                "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2finternetGateway:InternetGateway"
                description: The Internet Gateway for the VPC.
            isolatedSubnetIds:
                type: array
                items:
                    type: string
            natGateways:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2fnatGateway:NatGateway"
                description: The NAT Gateways for the VPC. If no NAT Gateways are specified, this will be an empty list.
            privateSubnetIds:
                type: array
                items:
                    type: string
            publicSubnetIds:
                type: array
                items:
                    type: string
            routeTableAssociations:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2frouteTableAssociation:RouteTableAssociation"
                description: The Route Table Associations for the VPC.
            routeTables:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2frouteTable:RouteTable"
                description: The Route Tables for the VPC.
            routes:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2froute:Route"
                description: The Routes for the VPC.
            subnets:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2fsubnet:Subnet"
                description: The VPC's subnets.
            vpc:
                "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2fvpc:Vpc"
                description: The VPC.
                language:
                    csharp:
                        name: AwsVpc
            vpcEndpoints:
                type: array
                items:
                    "$ref": "/aws/v5.4.0/schema.json#/resources/aws:ec2%2fvpcEndpoint:VpcEndpoint"
                description: The VPC Endpoints that are enabled
            vpcId:
                type: string
        required:
            - vpc
            - subnets
            - routeTables
            - routeTableAssociations
            - routes
            - internetGateway
            - natGateways
            - eips
            - publicSubnetIds
            - privateSubnetIds
            - isolatedSubnetIds
            - vpcId
            - vpcEndpoints
        inputProperties:
            assignGeneratedIpv6CidrBlock:
                type: boolean
                description: |
                    Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length
                    for the VPC. You cannot specify the range of IP addresses, or the size of the
                    CIDR block. Default is `false`. Conflicts with `ipv6_ipam_pool_id`
            availabilityZoneNames:
                type: array
                items:
                    type: string
                    plain: true
                plain: true
                description: |
                    A list of availability zone names to which the subnets defined in
                    subnetSpecs will be deployed. Optional, defaults to the first 3 AZs in the current
                    region.
            cidrBlock:
                type: string
                plain: true
                description: The CIDR block for the VPC. Optional. Defaults to 10.0.0.0/16.
            enableClassiclink:
                type: boolean
                description: |
                    A boolean flag to enable/disable ClassicLink
                    for the VPC. Only valid in regions and accounts that support EC2 Classic.
                    See the [ClassicLink documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/vpc-classiclink.html) for more information. Defaults false.
            enableClassiclinkDnsSupport:
                type: boolean
                description: |
                    A boolean flag to enable/disable ClassicLink DNS Support for the VPC.
                    Only valid in regions and accounts that support EC2 Classic.
            enableDnsHostnames:
                type: boolean
                description: A boolean flag to enable/disable DNS hostnames in the VPC. Defaults false.
            enableDnsSupport:
                type: boolean
                description: A boolean flag to enable/disable DNS support in the VPC. Defaults true.
            instanceTenancy:
                type: string
                description: |
                    A tenancy option for instances launched into the VPC. Default is
                    `default`, which ensures that EC2 instances launched in this VPC use the EC2
                    instance tenancy attribute specified when the EC2 instance is launched. The
                    only other option is `dedicated`, which ensures that EC2 instances launched
                    in this VPC are run on dedicated tenancy instances regardless of the tenancy
                    attribute specified at launch. This has a dedicated per region fee of $2 per
                    hour, plus an hourly per instance usage fee.
            ipv4IpamPoolId:
                type: string
                description: |
                    The ID of an IPv4 IPAM pool you want to use for allocating this
                    VPC''s CIDR. IPAM is a VPC feature that you can use to automate your IP address
                    management workflows including assigning, tracking, troubleshooting, and auditing
                    IP addresses across AWS Regions and accounts. Using IPAM you can monitor IP
                    address usage throughout your AWS Organization.
            ipv4NetmaskLength:
                type: integer
                description: |
                    The netmask length of the IPv4 CIDR you want to allocate to this
                    VPC. Requires specifying a `ipv4_ipam_pool_id`.
            ipv6CidrBlock:
                type: string
                description: |
                    IPv6 CIDR block to request from an IPAM Pool. Can be set explicitly
                    or derived from IPAM using `ipv6_netmask_length`.
            ipv6CidrBlockNetworkBorderGroup:
                type: string
                description: |
                    By default when an IPv6 CIDR is assigned to a VPC a default ipv6_cidr_block_network_border_group
                    will be set to the region of the VPC. This can be changed to restrict advertisement
                    of public addresses to specific Network Border Groups such as LocalZones.
            ipv6IpamPoolId:
                type: string
                description: IPAM Pool ID for a IPv6 pool. Conflicts with `assign_generated_ipv6_cidr_block`.
            ipv6NetmaskLength:
                type: integer
                description: |
                    Netmask length to request from IPAM Pool. Conflicts with `ipv6_cidr_block`.
                    This can be omitted if IPAM pool as a `allocation_default_netmask_length` set.
                    Valid values: `56`.
            natGateways:
                "$ref": "#/types/aws-vpc:index:NatGatewayStrategy"
                plain: true
                description: |
                    Configuration for NAT Gateways. Optional. If private and public subnets
                    are both specified, defaults to one gateway per availability zone. Otherwise,
                    no gateways will be created.
            numberOfAvailabilityZones:
                type: integer
                plain: true
                description: |
                    A number of availability zones to which the subnets defined in subnetSpecs
                    will be deployed. Optional, defaults to the first 3 AZs in the current region.
            subnetSpecs:
                type: array
                items:
                    "$ref": "#/types/aws-vpc:index:SubnetSpec"
                    plain: true
                plain: true
                description: |
                    A list of subnet specs that should be deployed to each AZ specified
                    in availabilityZoneNames. Optional. Defaults to a (smaller) public subnet and
                    a (larger) private subnet based on the size of the CIDR block for the VPC.
            tags:
                type: object
                additionalProperties:
                    type: string
                description: |
                    A map of tags to assign to the resource. If configured with a provider
                    `default_tags` configuration block present, tags with matching keys will overwrite
                    those defined at the provider-level.
            vpcEndpointSpecs:
                type: array
                items:
                    "$ref": "#/types/aws-vpc:index:VpcEndpointSpec"
                    plain: true
                plain: true
                description: A list of VPC Endpoints specs to be deployed as part of the VPC

language:
    csharp:
        packageReferences:
            Pulumi: 3.*
            Pulumi.Aws: 5.*
    go:
        generateResourceContainerTypes: true
        importBasePath: github.com/pulumi/pulumi-aws-vpc/sdk/go/aws-vpc
    nodejs:
        dependencies:
            "@pulumi/aws": "^5.0.0"
        devDependencies:
            typescript: "^3.7.0"
    python:
        requires:
            pulumi: ">=3.0.0,<4.0.0"
            pulumi-aws: ">=5.0.0,<6.0.0"
